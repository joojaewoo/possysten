/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pos;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hun
 */
public class GUI_refund extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
	String contents[][];
    public GUI_refund() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Bill_Title = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        Bill_Text = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        Start_Date = new javax.swing.JLabel();
        End_Date = new javax.swing.JLabel();
        Bill_Label = new javax.swing.JLabel();
        Bill_Barcode = new javax.swing.JTextField();
        Bill_Barcode_Input = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Search_Result = new javax.swing.JTable();
        Date_Search = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        Refund_button = new javax.swing.JButton();

        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        jDateChooser1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooser1PropertyChange(evt);
            }
        });
        jDateChooser2.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooser2PropertyChange(evt);
            }
        });

        Bill_Title.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Bill_Title.setText("영수증\n");
        Bill_Title.setEnabled(false);
        Bill_Title.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bill_TitleActionPerformed(evt);
            }
        });

        Bill_Text.setColumns(20);
        Bill_Text.setRows(5);
        jScrollPane3.setViewportView(Bill_Text);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(Bill_Title, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Bill_Title, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        Start_Date.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Start_Date.setText("시작일");

        End_Date.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        End_Date.setText("마지막일");

        Bill_Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Bill_Label.setText("영수증");
        Bill_Label.setToolTipText("");

        Bill_Barcode_Input.setText("입력");
        Bill_Barcode_Input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bill_Barcode_InputActionPerformed(evt);
            }
        });

        Search_Result.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "날짜", "영수증 번호", "금액"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(Search_Result);

        Date_Search.setText("조회");
        Date_Search.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Date_Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Date_SearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(Bill_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(End_Date, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(Start_Date, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(Bill_Barcode, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Bill_Barcode_Input, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                            .addComponent(jDateChooser2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Date_Search)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Start_Date, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(End_Date, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(jDateChooser2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(Date_Search, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Bill_Barcode_Input, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(Bill_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Bill_Barcode))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Refund_button.setText("환불하기");
        Refund_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Refund_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Refund_button, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)))
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Refund_button, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 17, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Bill_TitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bill_TitleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Bill_TitleActionPerformed

    private void Refund_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Refund_buttonActionPerformed
        // TODO add your handling code here:
    	String barcode = Bill_Barcode.getText();
    	if(barcode.contentEquals("")) {
    		JOptionPane.showMessageDialog(null, "영수증 바코드를 입력하세요.");
    	}
    	else if(isExistBill(barcode)){
    		JOptionPane.showMessageDialog(null, "영수증 바코드를 확인하세요.");
    	}
    	else {
         if(removeBill()&&updateProductDB()) {
         JOptionPane.showMessageDialog(null, "환불 완료");
         resetRefundWindow();
         }
         else {
        	 JOptionPane.showMessageDialog(null, "Error");	 
         }
    	}
        
    }//GEN-LAST:event_Refund_buttonActionPerformed
    public boolean removeBill() {
        // 환불된 영수증 삭제
        String billbarcode = Bill_Barcode.getText();
        if(db.delete_B(billbarcode))
        	return true;
        return false;
    }
    public boolean isExistBill(String Barcode) {
    	ArrayList<bill> a=db.search_B(Barcode);
    	if(a.isEmpty())
    		return true;
    	else
    		return false;
    }
    public boolean updateProductDB() {
        //환불된 상품 db 업데이트
        for(int i = 0 ; i < contents.length; i++) {
        if(!db.update_S(contents[i][0],Integer.parseInt(contents[i][1])))
        	return false;
        }
        return true;
    }
    
    public void resetRefundWindow() {
        // 환불창 리셋
        Bill_Text.setText("");
        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) Search_Result.getModel();
        model.setNumRows(0);
        Bill_Barcode.setText("");
        Date date = new Date();
        jDateChooser1.setDate(date);
        jDateChooser2.setDate(date);
    }
    private void Bill_Barcode_InputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bill_Barcode_InputActionPerformed
        // TODO add your handling code here:
    	String barcode = Bill_Barcode.getText();
    	if(barcode.contentEquals("")) {
    		JOptionPane.showMessageDialog(null, "영수증 바코드를 입력하세요.");
    	}
    	else if(isExistBill(barcode)){
    		JOptionPane.showMessageDialog(null, "영수증 바코드를 확인하세요.");
    	}
    	else {
    		Bill(Bill_Barcode.getText());	
    	}
    }//GEN-LAST:event_Bill_Barcode_InputActionPerformed

    public void Bill(String barcode) {
    	Bill_Text.setText("");
    	String header[] = {"상품명", "수량", "가격"};
        ArrayList<bill> a= db.search_B(barcode);
        contents=new String[a.size()][3];
        for(int i=0;i<a.size();i++) {
        	contents[i][0]=a.get(i).getName();
        	contents[i][1]=a.get(i).getCount();
        	contents[i][2]=a.get(i).getPrice();
        }
        int sum = 0;
        DefaultTableModel model = new DefaultTableModel(contents, header);
        JTable table = new JTable(model);

        Bill_Text.setText(Bill_Text.getText() + "=================================\n");
        Bill_Text.setText(Bill_Text.getText() + "====           POSBILL       ====\n");
        Bill_Text.setText(Bill_Text.getText() + "=================================\n");

        Bill_Text.setText(Bill_Text.getText() + "상품명" + "\t" + "수량" + "\t" + "가격" + "\n");

        for (int i = 0; i < model.getRowCount(); i++) {

            String pname = (String) model.getValueAt(i, 0);
            String amount = (String) model.getValueAt(i, 1);
            String price = (String) model.getValueAt(i, 2);

            Bill_Text.setText(Bill_Text.getText() + pname + "\t" + amount + "\t" + price + "\n");
        }

        Bill_Text.setText(Bill_Text.getText() + "\n");
        Bill_Text.setText(Bill_Text.getText() + "\n");

        // 합계
        for (int i = 0; i < model.getRowCount(); i++) {
            String price = (String) model.getValueAt(i, 2);
            sum += Integer.parseInt(price);
        }
        Bill_Text.setText(Bill_Text.getText() + "\t" + "\t" + "합계 :" + sum + "\n");
        Bill_Text.setText(Bill_Text.getText() + "=================================\n");
        Bill_Text.setText(Bill_Text.getText() + "====           이용해주셔서 감사합니다       ====\n");

    }


    private void Date_SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Date_SearchActionPerformed
        try {
            // TODO add your handling code here:
            search();
        } catch (ParseException ex) {
            Logger.getLogger(GUI_refund.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Date_SearchActionPerformed

    public void search() throws ParseException {
        SimpleDateFormat format = new SimpleDateFormat("yyyyMMdd");
        Date start_date = jDateChooser1.getDate();
        String inputStartDate = format.format(start_date);
        Date end_date = jDateChooser2.getDate();
        String inputEndDate = format.format(end_date);
        Date startDate = null;
        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) Search_Result.getModel();
        model.setNumRows(0);
        try {
            startDate = format.parse(inputStartDate);
        } catch (ParseException e) {
            e.printStackTrace();
        }
        Date endDate = null;
        try {
            endDate = format.parse(inputEndDate);
        } catch (ParseException e) {
            e.printStackTrace();
        }
        ArrayList<String> dates = new ArrayList<String>();
        Date currentDate = startDate;
        while (currentDate.compareTo(endDate) <= 0) {
            dates.add(format.format(currentDate));
            Calendar c = Calendar.getInstance();
            c.setTime(currentDate);
            c.add(Calendar.DAY_OF_MONTH, 1);
            currentDate = (Date) c.getTime();
        }
        int count=0;
        for (int i = 0; i < dates.size(); i++) {
            System.out.println(dates.get(i));
            ArrayList<sale> a=db.Bill_L(dates.get(i));
            //a.addAll(db.Bill_L(dates.get(i)));
            if(!a.isEmpty()) {
            	count++;
            }
            for(int j=0;j<a.size();j++) {
            String S=a.get(j).getCategory();
            String result[] = {S.substring(0,8), S.substring(8), Integer.toString(a.get(j).getPrice())+"원"};
            model = (DefaultTableModel) Search_Result.getModel();
            model.addRow(result);
            }
        }
        if(count==0)
        	JOptionPane.showMessageDialog(null, "조회된 영수증이 없습니다");
    }
    private void jDateChooser1PropertyChange(java.beans.PropertyChangeEvent evt) {                                             
        // TODO add your handling code here:
        SimpleDateFormat format = new SimpleDateFormat("yyyyMMdd");
        Date start_date = jDateChooser1.getDate();
        String a = format.format(start_date);
        int aa = Integer.parseInt(a);
        Date end_date = jDateChooser2.getDate();
        String b = format.format(end_date);
        int bb = Integer.parseInt(b);
        if(aa > bb) {
            JOptionPane.showMessageDialog(null, "날짜를 다시 선택하세요");
            jDateChooser1.setDate(end_date);
        }
    }
    private void jDateChooser2PropertyChange(java.beans.PropertyChangeEvent evt) {                                             
        // TODO add your handling code here:
        SimpleDateFormat format = new SimpleDateFormat("yyyyMMdd");
        Date start_date = jDateChooser1.getDate();
        String a = format.format(start_date);
        int aa = Integer.parseInt(a);
        Date end_date = jDateChooser2.getDate();
        String b = format.format(end_date);
        int bb = Integer.parseInt(b);
        if(aa > bb) {
            JOptionPane.showMessageDialog(null, "날짜를 다시 선택하세요");
            jDateChooser2.setDate(start_date);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI_refund.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI_refund.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI_refund.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI_refund.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI_refund().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Bill_Barcode;
    private javax.swing.JButton Bill_Barcode_Input;
    private javax.swing.JLabel Bill_Label;
    private javax.swing.JTextArea Bill_Text;
    private javax.swing.JTextField Bill_Title;
    private javax.swing.JButton Date_Search;
    private javax.swing.JLabel End_Date;
    private javax.swing.JButton Refund_button;
    private javax.swing.JTable Search_Result;
    private javax.swing.JLabel Start_Date;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables

}
